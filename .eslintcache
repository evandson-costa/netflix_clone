[{"D:\\Treinamentos\\Bonieky\\react\\netflix\\netflixclone\\src\\index.js":"1","D:\\Treinamentos\\Bonieky\\react\\netflix\\netflixclone\\src\\App.js":"2","D:\\Treinamentos\\Bonieky\\react\\netflix\\netflixclone\\src\\tmdb.js":"3","D:\\Treinamentos\\Bonieky\\react\\netflix\\netflixclone\\src\\components\\MovieRow.js":"4","D:\\Treinamentos\\Bonieky\\react\\netflix\\netflixclone\\src\\components\\FeaturedMovie.js":"5"},{"size":197,"mtime":1610739486000,"results":"6","hashOfConfig":"7"},{"size":1253,"mtime":1610932220000,"results":"8","hashOfConfig":"7"},{"size":2560,"mtime":1610932046000,"results":"9","hashOfConfig":"7"},{"size":825,"mtime":1610930204000,"results":"10","hashOfConfig":"7"},{"size":1878,"mtime":1610941166000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"odroix",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"D:\\Treinamentos\\Bonieky\\react\\netflix\\netflixclone\\src\\index.js",[],["27","28"],"D:\\Treinamentos\\Bonieky\\react\\netflix\\netflixclone\\src\\App.js",["29"],"import React,{ useEffect, useState } from 'react';\nimport Tmdb from './tmdb'\nimport MovieRow from \"./components/MovieRow\";\nimport '../src/App.css'\nimport FeaturedMovie from \"./components/FeaturedMovie\"\n\nexport default () =>\n{\n\n  const [moveList, setMovieList] = useState([])\n  const [feactureData, setFeactureData] = useState(null)\n\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list)\n\n      // pegando o feacture\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randomChosen]\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, \"tv\")\n      \n      setFeactureData(chosenInfo)\n    }\n\n    loadAll()\n  }, [])\n\n  return (\n    <div className=\"page\">\n      {\n        feactureData &&\n        <FeaturedMovie item = {feactureData} />\n      }\n      <div className=\"list\">\n        {\n          moveList.map((item, key) => (\n            <MovieRow \n              key={ key }\n              title={item.title}\n              items={item.items}\n            />\n          ))\n        }\n      </div>\n    </div>\n  )\n}","D:\\Treinamentos\\Bonieky\\react\\netflix\\netflixclone\\src\\tmdb.js",["30"],"const API_KEY = 'e455cbe5bd538394dd07f8c6f967d3b5'\r\nconst API_BASE = 'https://api.themoviedb.org/3'\r\n\r\n\r\nconst basicFecth = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`)\r\n    const json = await req.json()\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title : \"Originais do Netflix\",\r\n                items : await basicFecth(`/discover/tv/?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title : \"Recomendados para Você\",\r\n                items : await basicFecth(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title : \"Em Alta\",\r\n                items : await basicFecth(`/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title : \"Ação\",\r\n                items : await basicFecth(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title : \"Comédia\",\r\n                items : await basicFecth(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title : \"Terror\",\r\n                items : await basicFecth(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title : \"Romance\",\r\n                items : await basicFecth(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },            \r\n            {\r\n                slug: 'documentary',\r\n                title : \"Documentários\",\r\n                items : await basicFecth(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ]\r\n    },\r\n\r\n    getMovieInfo: async (id, type) => {\r\n        let info = {};\r\n\r\n        if(id && type){\r\n            switch (type) {\r\n                case \"movie\":\r\n                    info = await basicFecth(`/movie/${id}?language=pt-BR&api_key=${API_KEY}`)\r\n                    break;\r\n            \r\n                default:\r\n                    info = await basicFecth(`/tv/${id}?language=pt-BR&api_key=${API_KEY}`)\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","D:\\Treinamentos\\Bonieky\\react\\netflix\\netflixclone\\src\\components\\MovieRow.js",["31"],"import  React  from \"react\";\r\nimport \"./Movierow.css\"\r\n\r\nexport default ({title, items}) => {\r\n    return (\r\n        <div className=\"movieRow\">            \r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--listarea\">                \r\n                    <div className=\"movieRow--list\">                       \r\n                        {items.results.length > 0 \r\n                            && items.results.map((item, key) => (\r\n                                <div className=\"movieRow--item\">\r\n                                    <img alt={item.original_title} src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}/>\r\n                                </div>                       \r\n                        ))}\r\n                    </div>                \r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\Treinamentos\\Bonieky\\react\\netflix\\netflixclone\\src\\components\\FeaturedMovie.js",["32","33","34"],"import React from \"react\";\r\nimport \"./FeaturedMovie.css\"\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n\r\n    for (let i in item.genres) {\r\n        genres.push(item.genres[1].name)\r\n    }\r\n\r\n    return (        \r\n            <section className=\"featured\" style={{\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n            }}>\r\n                <div className=\"featured--vertical\">\r\n                    <div className=\"featured--horizontal\">\r\n                        <div className=\"featured--name\">{item.original_name}</div>\r\n                        <div className=\"info\">\r\n                            <div className=\"featured--point\">{item.vote_average}</div>\r\n                            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                            <div className=\"featured--seasons\">{item.number_of_seasons}\r\n                             {item.number_of_seasons == 1 ? '° temporada' : '° temporadas'}</div>\r\n                        </div>\r\n                        <div className=\"featured--description\">{item.overview}</div>\r\n                        <div className=\"featured--buttons\">\r\n                            <a href={`/list/watch/${item.id}`}>▶️ Assistir</a>\r\n                            <a href={`/list/add/${item.id}`}>➕ Minha Lista</a>\r\n                        </div>\r\n                        <div className=\"featured--genres\">\r\n                            <strong>Gêneros: </strong>\r\n                            {\r\n                                genres.join(', ')\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>      \r\n    );\r\n}",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":7,"column":1,"nodeType":"41","endLine":51,"endColumn":2},{"ruleId":"39","severity":1,"message":"42","line":11,"column":1,"nodeType":"41","endLine":74,"endColumn":2},{"ruleId":"39","severity":1,"message":"40","line":4,"column":1,"nodeType":"41","endLine":20,"endColumn":2},{"ruleId":"39","severity":1,"message":"40","line":4,"column":1,"nodeType":"41","endLine":43,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":9,"column":14,"nodeType":"45","messageId":"46","endLine":9,"endColumn":15},{"ruleId":"47","severity":1,"message":"48","line":26,"column":54,"nodeType":"49","messageId":"50","endLine":26,"endColumn":56},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'i' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]